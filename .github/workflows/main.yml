name: build

on: [pull_request, push, workflow_dispatch]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - target: x86_64-unknown-linux-gnu
          os: ubuntu-18.04
          ninja_file: ninja-linux.zip
          ninja_sha: 763464859c7ef2ea3a0a10f4df40d2025d3bb9438fcb1228404640410c0ec22d
          ninja_dir: /usr/local/bin
          ninja_sudo: sudo
          rust: stable
          tar: linux
        - target: x86_64-apple-darwin
          os: macos-latest
          ninja_file: ninja-mac.zip
          ninja_sha: 6fa359f491fac7e5185273c6421a000eea6a2f0febf0ac03ac900bd4d80ed2a5
          ninja_dir: /usr/local/bin
          ninja_sudo: sudo
          rust: stable
          tar: osx
        - target: x86_64-pc-windows-msvc
          os: windows-latest
          ninja_file: ninja-win.zip
          ninja_sha: bbde850d247d2737c5764c927d1071cbb1f1957dcabda4a130fa8547c12c695f
          ninja_dir: /usr/bin
          ninja_sudo:
          rust: stable
          tar: windows
    steps:
    - uses: actions/checkout@v1
    - name: Install coreutils
      run: |
        brew update && brew install coreutils
      if: matrix.os == 'macos-latest'
      shell: bash
    - name: Install Ninja
      run: |
        curl -L -O "https://github.com/ninja-build/ninja/releases/download/v1.10.2/${{ matrix.ninja_file }}" && \
        echo "${{ matrix.ninja_sha }} ${{ matrix.ninja_file }}" | sha256sum -c && \
        ${{ matrix.ninja_sudo }} unzip ${{ matrix.ninja_file }} -d ${{ matrix.ninja_dir }} && rm ${{ matrix.ninja_file }}
      shell: bash
    - name: Install Rust
      run: |
        rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
        rustup target add ${{ matrix.target }}
      shell: bash
    - name: Build
      run: ./build.sh
      shell: bash
    - name: Upload ${{ matrix.tar }} tarball
      uses: actions/upload-artifact@v2
      with:
        name: solana-bpf-tools-${{ matrix.tar }}.tar.bz2
        path: out/solana-bpf-tools-${{ matrix.tar }}.tar.bz2

  release:
    name: Upload Release Assets
    needs: build
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
    - name: Download Linux tarball
      uses: actions/download-artifact@v2
      with:
        name: solana-bpf-tools-linux.tar.bz2
    - name: Download macOS tarball
      uses: actions/download-artifact@v2
      with:
        name: solana-bpf-tools-osx.tar.bz2
    - name: Download Windows tarball
      uses: actions/download-artifact@v2
      with:
        name: solana-bpf-tools-windows.tar.bz2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Release Linux tarball
      id: upload-release-linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: solana-bpf-tools-linux.tar.bz2
        asset_name: solana-bpf-tools-linux.tar.bz2
        asset_content_type: application/zip
    - name: Release macOS tarball
      id: upload-release-macos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: solana-bpf-tools-osx.tar.bz2
        asset_name: solana-bpf-tools-osx.tar.bz2
        asset_content_type: application/zip
    - name: Release Windows tarball
      id: upload-release-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: solana-bpf-tools-windows.tar.bz2
        asset_name: solana-bpf-tools-windows.tar.bz2
        asset_content_type: application/zip
