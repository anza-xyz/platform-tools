name: build

on: [pull_request, push, workflow_dispatch]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - target: x86_64-unknown-linux-gnu
          os: ubuntu-latest
          rust: stable
          tar: linux
        - target: x86_64-apple-darwin
          os: macos-latest
          rust: stable
          tar: osx
    steps:
    - uses: actions/checkout@v1
    - name: Install ninja on Linux
      run: |
        wget "https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-linux.zip" && \
        echo "d2fea9ff33b3ef353161ed906f260d565ca55b8ca0568fa07b1d2cab90a84a07 ninja-linux.zip" \
        | sha256sum -c
        sudo unzip ninja-linux.zip -d /usr/local/bin && rm ninja-linux.zip
      if: matrix.os == 'ubuntu-latest'
      shell: bash
    - name: Install ninja on macOS
      run: brew install ninja
      if: matrix.os == 'macos-latest'
      shell: bash
    - name: Install Rust
      run: |
        rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
        rustup target add ${{ matrix.target }}
      shell: bash
    - name: Build
      run: ./build.sh
      shell: bash
    - name: Upload ${{ matrix.tar }} tarball
      uses: actions/upload-artifact@v2
      with:
        name: solana-bpf-tools-${{ matrix.tar }}.tar.bz2
        path: out/solana-bpf-tools-${{ matrix.tar }}.tar.bz2

  release:
    name: Upload Release Assets
    needs: build
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
    - name: Download Linux tarball
      uses: actions/download-artifact@v2
      with:
        name: solana-bpf-tools-linux.tar.bz2
    - name: Download macOS tarball
      uses: actions/download-artifact@v2
      with:
        name: solana-bpf-tools-osx.tar.bz2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Release Linux tarball
      id: upload-release-linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: solana-bpf-tools-linux.tar.bz2
        asset_name: solana-bpf-tools-linux.tar.bz2
        asset_content_type: application/zip
    - name: Release macOS tarball
      id: upload-release-macos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: solana-bpf-tools-osx.tar.bz2
        asset_name: solana-bpf-tools-osx.tar.bz2
        asset_content_type: application/zip
